name: Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  configuracao-e-testes:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: nodesk
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    
      - name: Checkout do código
        uses: actions/checkout@v4


      - name: Atualiza pacotes
        run: sudo apt-get update || sudo apt-get upgrade -y


      - name: Instala client do PostgreSQL
        run: sudo apt-get update && sudo apt-get install -y postgresql-client


      - name: Configura Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"


      - name: Exporta variáveis do .env
        run: |
          set -o allexport
          source .env
          set +o allexport
        shell: bash


      - name: Instala Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry


      - name: Instala dependências com Poetry
        run: poetry install


      - name: Executa pytest
        run: poetry run pytest --maxfail=1 --disable-warnings -q
